diff --git a/node_modules/react-script-hook/lib/use-script.js b/node_modules/react-script-hook/lib/use-script.js
index b7ba6fc..e66de4b 100644
--- a/node_modules/react-script-hook/lib/use-script.js
+++ b/node_modules/react-script-hook/lib/use-script.js
@@ -93,6 +93,16 @@ function useScript(_a) {
         return function () {
             scriptEl.removeEventListener('load', handleLoad);
             scriptEl.removeEventListener('error', handleError);
+
+            // if we unmount, and we are still loading the script, then
+            // remove from the DOM & cache so we have a clean slate next time.
+            // this is similar to the `removeOnUnmount` behavior of the TS useScript hook
+            // https://github.com/juliencrn/usehooks-ts/blob/20667273744a22dd2cd2c48c38cd3c10f254ae47/packages/usehooks-ts/src/useScript/useScript.ts#L134
+            // but only applied when loading
+            if (status && status.loading) {
+                scriptEl.remove();
+                delete exports.scripts[src];
+            }
         };
         // we need to ignore the attributes as they're a new object per call, so we'd never skip an effect call
     }, [src]);
